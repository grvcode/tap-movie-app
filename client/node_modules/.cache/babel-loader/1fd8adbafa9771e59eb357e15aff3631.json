{"ast":null,"code":"var _jsxFileName = \"/Users/gaurav/Downloads/tap-movie-app/client/src/pages/MovieDetails.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Alert, Card } from 'react-bootstrap';\nimport axios from 'axios';\nimport moment from 'moment';\nimport Loader from '../components/Loader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction MovieDetails() {\n  _s();\n\n  const {\n    movieId\n  } = useParams();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [details, setDetails] = useState({});\n  useEffect(() => {\n    fetchMovieDetails();\n  }, []);\n\n  const fetchMovieDetails = async () => {\n    try {\n      setLoading(true);\n      const response = await axios({\n        method: 'get',\n        url: `http://localhost:4000/api/movies/${movieId}`\n      });\n      setLoading(false);\n      setDetails(response.data.movie);\n    } catch (e) {\n      setError(e.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    bg: \"primary\",\n    text: \"white\",\n    children: [error && /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 23\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: details.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n          variant: \"top\",\n          src: details.poster\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Rating: \", details.rating]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Created At: \", moment(details.createdAt).format('DD-MMM-YYYY')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Updated At: \", moment(details.updatedAt).format('DD-MMM-YYYY')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MovieDetails, \"mfcwlCR95FcJaTpIXprsaK9dnwA=\", false, function () {\n  return [useParams];\n});\n\n_c = MovieDetails;\nexport default MovieDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieDetails\");","map":{"version":3,"sources":["/Users/gaurav/Downloads/tap-movie-app/client/src/pages/MovieDetails.jsx"],"names":["React","useEffect","useState","useParams","Alert","Card","axios","moment","Loader","MovieDetails","movieId","loading","setLoading","error","setError","details","setDetails","fetchMovieDetails","response","method","url","data","movie","e","message","title","poster","rating","createdAt","format","updatedAt"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,KAAT,EAAgBC,IAAhB,QAA4B,iBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;;;AAEA,SAASC,YAAT,GAAwB;AAAA;;AACpB,QAAM;AAAEC,IAAAA;AAAF,MAAcP,SAAS,EAA7B;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACa,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,EAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZgB,IAAAA,iBAAiB;AACpB,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,iBAAiB,GAAG,YAAY;AAClC,QAAI;AACAL,MAAAA,UAAU,CAAC,IAAD,CAAV;AACA,YAAMM,QAAQ,GAAG,MAAMZ,KAAK,CAAC;AACzBa,QAAAA,MAAM,EAAE,KADiB;AAEzBC,QAAAA,GAAG,EAAG,oCAAmCV,OAAQ;AAFxB,OAAD,CAA5B;AAIAE,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAI,MAAAA,UAAU,CAACE,QAAQ,CAACG,IAAT,CAAcC,KAAf,CAAV;AACH,KARD,CASA,OAAOC,CAAP,EAAU;AACNT,MAAAA,QAAQ,CAACS,CAAC,CAACC,OAAH,CAAR;AACH;AACJ,GAbD;;AAeA,sBACI,QAAC,IAAD;AAAM,IAAA,EAAE,EAAC,SAAT;AAAmB,IAAA,IAAI,EAAC,OAAxB;AAAA,eACKX,KAAK,iBAAI,QAAC,KAAD;AAAO,MAAA,OAAO,EAAC,QAAf;AAAA,gBAAyBA;AAAzB;AAAA;AAAA;AAAA;AAAA,YADd,EAEKF,OAAO,gBACJ,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADI,gBAGJ;AAAA,8BACI,QAAC,IAAD,CAAM,MAAN;AAAA,+BAAa;AAAA,oBAAKI,OAAO,CAACU;AAAb;AAAA;AAAA;AAAA;AAAA;AAAb;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,IAAD,CAAM,IAAN;AAAA,gCACI,QAAC,IAAD,CAAM,GAAN;AAAU,UAAA,OAAO,EAAC,KAAlB;AAAwB,UAAA,GAAG,EAAEV,OAAO,CAACW;AAArC;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,iCAAYX,OAAO,CAACY,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAA,qCAAgBpB,MAAM,CAACQ,OAAO,CAACa,SAAT,CAAN,CAA0BC,MAA1B,CAAiC,aAAjC,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA,qCAAgBtB,MAAM,CAACQ,OAAO,CAACe,SAAT,CAAN,CAA0BD,MAA1B,CAAiC,aAAjC,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA,oBALR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH;;GA3CQpB,Y;UACeN,S;;;KADfM,Y;AA6CT,eAAeA,YAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom';\nimport { Alert, Card } from 'react-bootstrap';\nimport axios from 'axios';\nimport moment from 'moment';\nimport Loader from '../components/Loader';\n\nfunction MovieDetails() {\n    const { movieId } = useParams();\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const [details, setDetails] = useState({});\n\n    useEffect(() => {\n        fetchMovieDetails();\n    }, [])\n\n    const fetchMovieDetails = async () => {\n        try {\n            setLoading(true);\n            const response = await axios({\n                method: 'get',\n                url: `http://localhost:4000/api/movies/${movieId}`\n            });\n            setLoading(false);\n            setDetails(response.data.movie);\n        }\n        catch (e) {\n            setError(e.message);\n        }\n    }\n\n    return (\n        <Card bg=\"primary\" text=\"white\">\n            {error && <Alert variant='danger'>{error}</Alert>}\n            {loading ?\n                <Loader />\n                :\n                <>\n                    <Card.Header><h1>{details.title}</h1></Card.Header>\n                    <Card.Body>\n                        <Card.Img variant=\"top\" src={details.poster} />\n                        <p>Rating: {details.rating}</p>\n                        <p>Created At: {moment(details.createdAt).format('DD-MMM-YYYY')}</p>\n                        <p>Updated At: {moment(details.updatedAt).format('DD-MMM-YYYY')}</p>\n                    </Card.Body>\n                </>\n            }\n        </Card>\n    )\n}\n\nexport default MovieDetails;\n"]},"metadata":{},"sourceType":"module"}